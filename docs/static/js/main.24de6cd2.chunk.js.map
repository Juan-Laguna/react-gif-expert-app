{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GiftGridItems.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GiftGridItems","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFechtGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAoB5C,OAEQ,sBAAMC,SAdO,SAACC,GAClBA,EAAEC,iBAGCJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOd,SACI,uBACQO,KAAK,OACLC,MAAOT,EACPU,SAtBM,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCNfG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEZC,EAFY,gDAEmCC,UAAUH,GAF7C,+DAGCI,MAAMF,GAHP,cAGZG,EAHY,gBAIGA,EAAKC,OAJR,uBAIXC,EAJW,EAIXA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVxB,kBAcZM,GAdY,4CAAH,sDCAVO,EAAgB,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGlC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAuBtC,OAhBAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GAEFH,EAAS,CACDf,KAAMkB,EACNL,SAAS,SAI1B,CAACpB,IAKGqB,EDpBwBK,CAAa1B,GAAhCa,EAFuB,EAE5BN,KAAaa,EAFe,EAEfA,QAErB,OACK,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDhB,IACnDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAEIH,EAAOJ,KAAM,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEdpBgB,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,cAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAU9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCnB7B6B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.24de6cd2.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        \r\n        if(inputValue.trim().length > 2) {\r\n            \r\n            setCategories(cats => [inputValue, ...cats ]);\r\n            setinputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        \r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                        type=\"text\"\r\n                        value={inputValue}\r\n                        onChange= {handleInputChange}\r\n                />\r\n           </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n  export  const getGifs = async (category) => {\r\n\r\n        const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=9dm87FJZoDBtz9e2Qrppi4m5znb4aVQ2`;\r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map(img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n\r\n       return gifs;\r\n       \r\n\r\n }\r\n","import React from 'react'\r\n\r\nexport const GiftGridItems = ({title, url}) => {\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFechtGifs } from '../hooks/useFetchGifs'\r\nimport { GiftGridItems } from './GiftGridItems';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFechtGifs(category);\r\n\r\n   return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\" >{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n                \r\n            <div className=\"card-grid\">\r\n            {\r\n                images.map(  img => (\r\n                    <GiftGridItems \r\n                        key={img.id}\r\n                        {...img}\r\n                    />\r\n                ))\r\n            }\r\n            </div>\r\n        </>          \r\n    )\r\n}\r\n\r\n","import { useState, useEffect } from \"react\";\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\n\r\nexport const useFechtGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                \r\n                setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                });\r\n            })\r\n\r\n    }, [category])\r\n\r\n   \r\n\r\n    \r\n    return state;\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One punch']);\r\n    \r\n    // const handleAdd = () => {\r\n    //     setCategories(['HunterXhunter', ...categories]);\r\n    //     // setCategories(cats => [... cats, 'HunterXhunter']);\r\n    // }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category =>  \r\n                        <GifGrid \r\n                        key={category}\r\n                        category={category} />\r\n                    )\r\n                }    \r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}